{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","serviceWorker.js","index.js"],"names":["Card","props","className","alt","src","caracters","jpgname","name","puntos","CardList","map","key","id","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","state","this","filteredCaracters","filter","toLowerCase","includes","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"mUAIaA,G,MAAO,SAAAC,GAAK,OACrB,yBAAKC,UAAU,kBACX,yBACAC,IAAI,YACJC,IAAG,qDAAgDH,EAAMI,UAAUC,QAAhE,UAIP,sCAAYL,EAAMI,UAAUE,KAA5B,KACA,uCAAaN,EAAMI,UAAUG,OAA7B,QCPSC,G,MAAW,SAAAR,GAAK,OACzB,yBAAKC,UAAU,aACVD,EAAMI,UAAUK,KAAI,SAAAL,GAAS,OAC1B,kBAAC,EAAD,CAAMM,IAAKN,EAAUO,GAAIP,UAAWA,UCLnCQ,G,MAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,2BACIb,UAAU,SACVc,KAAK,SACLF,YAAaA,EACbG,SAAUF,MC8GHG,G,wDA9Gb,aAAe,IAAD,8BACZ,gBAuFFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAtFtC,EAAKC,MAAQ,CACXnB,UAAW,CACT,CACEE,KAAM,MACND,QAAS,MACTE,OAAQ,KACRI,GAAI,UAEN,CACEL,KAAM,eACND,QAAS,eACTE,OAAQ,KACRI,GAAI,UAEN,CACEL,KAAM,SACND,QAAS,SACTE,OAAQ,KACRI,GAAI,UAEN,CACEL,KAAM,8BACND,QAAS,2BACTE,OAAQ,KACRI,GAAI,aAEN,CACEL,KAAM,yBACND,QAAS,sBACTE,OAAQ,KACRI,GAAI,aAEN,CACEL,KAAM,UACND,QAAS,UACTE,OAAQ,KACRI,GAAI,cAEN,CACEL,KAAM,QACND,QAAS,QACTE,OAAQ,KACRI,GAAI,YAEN,CACEL,KAAM,UACND,QAAS,UACTE,OAAQ,KACRI,GAAI,aAEN,CACEL,KAAM,MACND,QAAS,MACTE,OAAQ,KACRI,GAAI,aAEN,CACEL,KAAM,UACND,QAAS,UACTE,OAAQ,KACRI,GAAI,eAEN,CACEL,KAAM,SACND,QAAS,SACTE,OAAQ,KACRI,GAAI,aAEN,CACEL,KAAM,QACND,QAAS,QACTE,OAAQ,KACRI,GAAI,iBAGRS,YAAa,IA9EH,E,qDA4FJ,IAAD,EAC4BI,KAAKD,MAAhCnB,EADD,EACCA,UAAWgB,EADZ,EACYA,YACbK,EAAoBrB,EAAUsB,QAAO,SAAAtB,GAAS,OAClDA,EAAUE,KAAKqB,cAAcC,SAASR,EAAYO,kBACpD,OACE,yBAAK1B,UAAU,OACf,qDACA,kBAAC,EAAD,CACCY,YAAY,kBACZC,aAAeU,KAAKV,eAErB,kBAAC,EAAD,CAAUV,UAAYqB,S,GAzGVI,cCKEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.b15d584e.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './card.style.css';\r\n\r\nexport const Card = props => (\r\n    <div className='card-container'>\r\n        <img \r\n        alt='caracters'\r\n        src={`https://cdn6.dibujos.net/images/listas/117/${props.caracters.jpgname}.jpg`}\r\n        /* src={`https://robohash.org/${props.caracters.id}?set=set2&size=180x180`} */\r\n        />\r\n    \r\n    <h2> Name: {props.caracters.name} </h2>\r\n    <h3> score: {props.caracters.puntos} </h3>\r\n    </div>\r\n);\r\n","import React from 'react';\r\n\r\nimport { Card } from '../card/card.component'\r\n\r\nimport './card-list.style.css';\r\n\r\nexport const CardList = props => (\r\n    <div className='card-list'>\r\n        {props.caracters.map(caracters => (\r\n            <Card key={caracters.id} caracters={caracters} />\r\n        ))}\r\n    </div>\r\n);","import React from 'react';\r\n\r\nimport './search-box.style.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => (\r\n    <input\r\n        className='search'\r\n        type='search'\r\n        placeholder={placeholder}\r\n        onChange={handleChange}\r\n    />\r\n    \r\n    );","import React, { Component } from 'react';\n\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox} from './components/search-box/search-box.component';\n\nimport './App.css';\n\nclass App extends Component {\n\n  constructor() {\n    super();\n\n    this.state = {\n      caracters: [\n        {\n          name: \"A18\",\n          jpgname: \"a18\",\n          puntos: 2841,\n          id: \"a12893\"\n        },\n        {\n          name: \"Dios Shenron\",\n          jpgname: \"dios-shenron\",\n          puntos: 2800,\n          id: \"asleo1\"\n        },\n        {\n          name: \"Trunks\",\n          jpgname: \"trunks\",\n          puntos: 2737,\n          id: \"893der\"\n        },\n        {\n          name: \"Goku Súper Saiyan Dios 2\",\n          jpgname: \"goku-super-saiyan-dios-2\",\n          puntos: 4542,\n          id: \"893desder\"\n        },\n        {\n          name: \"Vegeta Súper Saiyan\",\n          jpgname: \"vegeta-super-saiyan\",\n          puntos: 3535,\n          id: \"8934g3der\"\n        },\n        {\n          name: \"Gotenks\",\n          jpgname: \"gotenks\",\n          puntos: 2904,\n          id: \"893d3frter\"\n        },\n        {\n          name: \"Bulma\",\n          jpgname: \"bulma\",\n          puntos: 2742,\n          id: \"893derrt\"\n        },\n        {\n          name: \"Piccolo\",\n          jpgname: \"piccolo\",\n          puntos: 2653,\n          id: \"893dehytr\"\n        },\n        {\n          name: \"Pan\",\n          jpgname: \"pan\",\n          puntos: 2573,\n          id: \"893d567er\"\n        },\n        {\n          name: \"Freezer\",\n          jpgname: \"freezer\",\n          puntos: 2619,\n          id: \"893deryth32\"\n        },\n        {\n          name: \"Krilin\",\n          jpgname: \"krilin\",\n          puntos: 2476,\n          id: \"erd893der\"\n        },\n        {\n          name: \"Videl\",\n          jpgname: \"videl\",\n          puntos: 2414,\n          id: \"834393desder\"\n        },\n      ],\n      searchField: ''\n    };\n  }\n\n/*   componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(users => this.setState({ caracters: users }));\n  } */\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value });\n  }\n\n  render() {\n    const { caracters, searchField } = this.state;\n    const filteredCaracters = caracters.filter(caracters => \n      caracters.name.toLowerCase().includes(searchField.toLowerCase()));\n    return (\n      <div className=\"App\">\n      <h1>Dragon Ball Caracters</h1>\n      <SearchBox \n       placeholder=\"search caracter\" \n       handleChange={ this.handleChange } \n       />\n      <CardList caracters={ filteredCaracters } />\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}